#!/bin/bash

# Detect OS type
OS=$(uname -s)
IS_WINDOWS=false
IS_MAC=false
IS_LINUX=false
IS_TERMUX=false

if [[ "$OS" == "Darwin" ]]; then
    IS_MAC=true
elif [[ "$OS" == "Linux" ]]; then
    if [[ "$(uname -o)" == "Android" ]]; then
        IS_TERMUX=true
    else
        IS_LINUX=true
    fi
elif [[ "$OS" =~ "MINGW" || "$OS" =~ "CYGWIN" || "$OS" =~ "MSYS" ]]; then
    IS_WINDOWS=true
fi

# Define usage function
usage() {
    echo "Usage: marcus [OPTION] [ARGUMENT]"
    echo ""
    echo "Options:"
    echo "  --install <package>   Install a package based on OS"
    echo "  --show                List files in the current directory"
    echo "  --move <src> <dest>   Move a file or directory"
    echo "  --rename <src> <new>  Rename a file or directory"
    echo "  --copy <src> <dest>   Copy a file or directory"
    echo "  --delete <file>       Delete a file"
    echo "  --Delete <dir>        Delete a directory"
    echo "  --zip <dir> <name>    Compress a directory"
    echo "  --unzip <file.zip>    Extract a zip file"
    echo "  --view <file>         View file contents"
    echo "  --navigate <dir>      Navigate to a directory"
    echo "  --back                Move one directory up"
    echo "  --destination         Show current directory"
    echo "  --ping <host>         Ping a host"
    echo "  --create <folder>     Create a new folder"
    echo "  --add <file>          Create a new empty file"
    echo "  --help                Show this help message"
}

# Ensure at least one argument is provided
if [[ $# -eq 0 ]]; then
    usage
    exit 1
fi

# Command Execution
case "$1" in
    --install)
        if [[ -z "$2" ]]; then
            echo "Error: No package specified."
            exit 1
        fi
        PACKAGE="$2"
        if $IS_LINUX; then
            if command -v apt &>/dev/null; then
                sudo apt install -y "$PACKAGE"
            elif command -v pacman &>/dev/null; then
                sudo pacman -S --noconfirm "$PACKAGE"
            elif command -v dnf &>/dev/null; then
                sudo dnf install -y "$PACKAGE"
            elif command -v zypper &>/dev/null; then
                sudo zypper install -y "$PACKAGE"
            else
                echo "Unsupported package manager."
            fi
        elif $IS_MAC; then
            brew install "$PACKAGE"
        elif $IS_TERMUX; then
            pkg install -y "$PACKAGE"
        elif $IS_WINDOWS; then
            choco install -y "$PACKAGE"
        else
            echo "Unsupported OS."
        fi
        ;;
    
    --show)
        ls
        ;;
    
    --move)
        if [[ -z "$2" || -z "$3" ]]; then
            echo "Error: Source and destination required."
            exit 1
        fi
        mv "$2" "$3"
        ;;
    
    --rename)
        if [[ -z "$2" || -z "$3" ]]; then
            echo "Error: Old and new name required."
            exit 1
        fi
        mv "$2" "$3"
        ;;
    
    --copy)
        if [[ -z "$2" || -z "$3" ]]; then
            echo "Error: Source and destination required."
            exit 1
        fi
        cp -r "$2" "$3"
        ;;
    
    --delete)
        if [[ -z "$2" ]]; then
            echo "Error: No file specified."
            exit 1
        fi
        rm -f "$2"
        ;;
    
    --Delete)
        if [[ -z "$2" ]]; then
            echo "Error: No directory specified."
            exit 1
        fi
        rm -rf "$2"
        ;;
    
    --zip)
        if [[ -z "$2" || -z "$3" ]]; then
            echo "Error: Directory and zip name required."
            exit 1
        fi
        zip -r "$3" "$2"
        ;;
    
    --unzip)
        if [[ -z "$2" ]]; then
            echo "Error: No zip file specified."
            exit 1
        fi
        unzip "$2"
        ;;
    
    --view)
        if [[ -z "$2" ]]; then
            echo "Error: No file specified."
            exit 1
        fi
        cat "$2"
        ;;
    
    --navigate)
        if [[ -z "$2" ]]; then
            echo "Error: No directory specified."
            exit 1
        fi
        cd "$2" || echo "Error: Directory not found."
        ;;
    
    --back)
        cd ..
        ;;
    
    --destination)
        pwd
        ;;
    
    --ping)
        if [[ -z "$2" ]]; then
            echo "Error: No host specified."
            exit 1
        fi
        if $IS_WINDOWS; then
            ping "$2"
        else
            ping -c 4 "$2"
        fi
        ;;
    
    --create)
        if [[ -z "$2" ]]; then
            echo "Error: No folder name specified."
            exit 1
        fi
        mkdir -p "$2"
        ;;
    
    --add)
        if [[ -z "$2" ]]; then
            echo "Error: No file name specified."
            exit 1
        fi
        touch "$2"
        ;;
    
    --help)
        usage
        ;;
    
    *)
        echo "Unknown command. Use --help for a list of commands."
        exit 1
        ;;
esac
